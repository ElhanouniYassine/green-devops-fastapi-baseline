name: Quality Gates

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  lint-type-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ruff (lint)
        run: ruff check --output-format=github .

      - name: Black (format check)
        run: black --check .

      - name: Mypy (type check)
        run: mypy src

      - name: Pytest (coverage â‰¥85%)
        env:
          API_TOKEN: devtoken
        run: |
          pytest
          # Enforce coverage via .coveragerc fail_under; also produce xml for artifacts:
          pytest --cov=src --cov-report=xml:coverage.xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage.xml
          path: coverage.xml

  perf:
    runs-on: ubuntu-latest
    needs: lint-type-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run perf benchmark
        env:
          API_TOKEN: devtoken
        run: |
          pytest -k test_perf_create_and_list --benchmark-json=bench.json
      - name: Upload perf artifact
        uses: actions/upload-artifact@v4
        with:
          name: benchmark
          path: bench.json
