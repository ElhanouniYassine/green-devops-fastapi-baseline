name: Publish Docker to GHCR (Provenance + SBOM)

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: meta
        run: |
          REPO="ghcr.io/${GITHUB_REPOSITORY_OWNER}/green-devops"
          SHA_TAG="${REPO}:sha-${GITHUB_SHA::7}"
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VERSION_TAG="${REPO}:${GITHUB_REF_NAME}"
          else
            VERSION_TAG="${REPO}:latest"
          fi
          echo "repo=${REPO}" >> $GITHUB_OUTPUT
          echo "sha_tag=${SHA_TAG}" >> $GITHUB_OUTPUT
          echo "version_tag=${VERSION_TAG}" >> $GITHUB_OUTPUT

      - name: Build & Push (multi-arch)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.version_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false   # we'll attach separately with attest-build-provenance

      - name: Attest build provenance (SLSA)
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ steps.meta.outputs.repo }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Generate SBOM (SPDX) for pushed image
        uses: anchore/sbom-action@v0
        with:
          image: "${{ steps.meta.outputs.version_tag }}"
          format: "spdx-json"
          output-file: "sbom.spdx.json"

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

      - name: Trivy scan (image in registry)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: "${{ steps.meta.outputs.version_tag }}"
          format: 'table'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Summary
        run: |
          echo "### Published to GHCR" >> $GITHUB_STEP_SUMMARY
          echo "- Image: \`${{ steps.meta.outputs.version_tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Digest: \`${{ steps.build.outputs.digest }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- SBOM: artifact \`sbom.spdx.json\`" >> $GITHUB_STEP_SUMMARY
          echo "- Provenance: attached via OIDC attestations" >> $GITHUB_STEP_SUMMARY
